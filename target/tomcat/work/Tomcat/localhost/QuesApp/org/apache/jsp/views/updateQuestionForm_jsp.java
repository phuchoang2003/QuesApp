/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2024-02-27 16:08:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class updateQuestionForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Create Question</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: Arial, sans-serif;\r\n");
      out.write("            background: linear-gradient(90deg, #c7c5f4, #776bcc);\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .container {\r\n");
      out.write("            max-width: 800px;\r\n");
      out.write("            margin: 50px auto;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            background-color: rgba(255, 255, 255, 0.9);\r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        h2 {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            color: #6c63ac;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .form-group {\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        label {\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            color: #6c63ac;\r\n");
      out.write("            display: block;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        input[type=\"text\"] {\r\n");
      out.write("            width: calc(100% - 20px);\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            margin-top: 5px;\r\n");
      out.write("            margin-bottom: 10px;\r\n");
      out.write("            border: 1px solid #ccc;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            box-sizing: border-box;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .option {\r\n");
      out.write("            margin-bottom: 10px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .option input[type=\"text\"],\r\n");
      out.write("        .option input[type=\"radio\"] {\r\n");
      out.write("            vertical-align: middle;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .option label {\r\n");
      out.write("            vertical-align: middle;\r\n");
      out.write("            margin-left: 5px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .button-container {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        button[type=\"submit\"], button[type=\"button\"] {\r\n");
      out.write("            padding: 10px 20px;\r\n");
      out.write("            background-color: #6c63ac;\r\n");
      out.write("            color: #fff;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            transition: background-color 0.3s;\r\n");
      out.write("            margin-left: 10px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        button[type=\"submit\"]:hover, button[type=\"button\"]:hover {\r\n");
      out.write("            background-color: #564c88;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <h2>Create Question</h2>\r\n");
      out.write("        <div id=\"questionForm\">\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label for=\"question\">Question:</label>\r\n");
      out.write("                <input type=\"text\" id=\"question\" name=\"question\" required />\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"option\">\r\n");
      out.write("                <label for=\"option1\">Option 1:</label>\r\n");
      out.write("                <input type=\"text\" class=\"option-text content-opt1\" name=\"option\" required />\r\n");
      out.write("                <input type=\"radio\" id=\"option1\" name=\"answer\" value=\"Option 1\" />\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"option\">\r\n");
      out.write("                <label for=\"option2\">Option 2:</label>\r\n");
      out.write("                <input type=\"text\" class=\"option-text content-opt2\" name=\"option\" required />\r\n");
      out.write("                <input type=\"radio\" id=\"option2\" name=\"answer\" value=\"Option 2\" />\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"option\">\r\n");
      out.write("                <label for=\"option3\">Option 3:</label>\r\n");
      out.write("                <input type=\"text\" class=\"option-text content-opt3\" name=\"option\" required />\r\n");
      out.write("                <input type=\"radio\" id=\"option3\" name=\"answer\" value=\"Option 3\" />\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"option\">\r\n");
      out.write("                <label for=\"option4\">Option 4:</label>\r\n");
      out.write("                <input type=\"text\" class=\"option-text content-opt4\" name=\"option\" required />\r\n");
      out.write("                <input type=\"radio\" id=\"option4\" name=\"answer\" value=\"Option 4\" />\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"button-container\">\r\n");
      out.write("                <button id = \"updateBtn\" type=\"submit\">Update</button>\r\n");
      out.write("                <button type=\"button\" onclick=\"window.history.back()\">Back</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("     document.addEventListener(\"DOMContentLoaded\",()=>{\r\n");
      out.write("     const updateButton = document.querySelector(\"#updateBtn\");\r\n");
      out.write("     updateButton.addEventListener(\"click\",async ()=>{\r\n");
      out.write("               await updateQuestion(getUserInput());\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("            });\r\n");
      out.write("     })\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("     async function myFetch(url, options) {\r\n");
      out.write("       try {\r\n");
      out.write("        const response = await fetch(url, options);\r\n");
      out.write("          return response;\r\n");
      out.write("          } catch (error) {\r\n");
      out.write("           console.log(\"2\", error.message);\r\n");
      out.write("           alert(error.message);\r\n");
      out.write("          }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("           function getUserInput() {\r\n");
      out.write("               const contentQuestion = document.querySelector(\"#question\");\r\n");
      out.write("               const isCorrectOption1 = document.querySelector(\"#option1\");\r\n");
      out.write("               const contentOption1 = document.querySelector(\".content-opt1\");\r\n");
      out.write("\r\n");
      out.write("               const isCorrectOption2 = document.querySelector(\"#option2\");\r\n");
      out.write("               const contentOption2 = document.querySelector(\".content-opt2\");\r\n");
      out.write("\r\n");
      out.write("               const isCorrectOption3 = document.querySelector(\"#option3\");\r\n");
      out.write("               const contentOption3 = document.querySelector(\".content-opt3\");\r\n");
      out.write("\r\n");
      out.write("               const isCorrectOption4 = document.querySelector(\"#option4\"); // Corrected here\r\n");
      out.write("               const contentOption4 = document.querySelector(\".content-opt4\");\r\n");
      out.write("\r\n");
      out.write("               return { contentQuestion, isCorrectOption1, isCorrectOption2, isCorrectOption3, isCorrectOption4, contentOption1, contentOption2, contentOption3, contentOption4 };\r\n");
      out.write("           }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        async function sendQuestionData(data) {\r\n");
      out.write("              const idQuestion = localStorage.getItem(\"idQuestion\");\r\n");
      out.write("              console.log(\"phuc\",idQuestion);\r\n");
      out.write("              const url = `http://localhost:8080/QuesApp/auth/questions?id=${idQuestion}`;\r\n");
      out.write("              const options = {\r\n");
      out.write("                method: \"PUT\",\r\n");
      out.write("                headers: {\r\n");
      out.write("                  \"Content-Type\": \"application/json\",\r\n");
      out.write("                },\r\n");
      out.write("                body: JSON.stringify(data),\r\n");
      out.write("              };\r\n");
      out.write("\r\n");
      out.write("              try {\r\n");
      out.write("                const response = await myFetch(url, options);\r\n");
      out.write("                const responseData = await response.json();\r\n");
      out.write("                return responseData;\r\n");
      out.write("              } catch (error) {\r\n");
      out.write("                console.log(\"phuc\");\r\n");
      out.write("                alert(error.message);\r\n");
      out.write("              }\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("            async function updateQuestion(inputUser) {\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                  const contentQues = inputUser.contentQuestion;\r\n");
      out.write("\r\n");
      out.write("                  const isCorrectOpt1 = inputUser.isCorrectOption1;\r\n");
      out.write("                  const contentOpt1 = inputUser.contentOption1;\r\n");
      out.write("\r\n");
      out.write("                  const isCorrectOpt2 = inputUser.isCorrectOption2;\r\n");
      out.write("                  const contentOpt2 = inputUser.contentOption2;\r\n");
      out.write("\r\n");
      out.write("                  const isCorrectOpt3 = inputUser.isCorrectOption3;\r\n");
      out.write("                  const contentOpt3 = inputUser.contentOption3;\r\n");
      out.write("\r\n");
      out.write("                  const isCorrectOpt4 = inputUser.isCorrectOption4;\r\n");
      out.write("                  const contentOpt4 = inputUser.contentOption4;\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                  if (contentQues && isCorrectOpt1 && isCorrectOpt2 && isCorrectOpt3 && isCorrectOpt4 && contentOpt1 && contentOpt2 && contentOpt3 && contentOpt4) {\r\n");
      out.write("                    const question = {\r\n");
      out.write("                          content: contentQues.value,\r\n");
      out.write("                          answers: [\r\n");
      out.write("                            { contentOption: contentOpt1.value, isCorrect: isCorrectOpt1.checked },\r\n");
      out.write("                            { contentOption: contentOpt2.value, isCorrect: isCorrectOpt2.checked },\r\n");
      out.write("                            { contentOption: contentOpt3.value, isCorrect: isCorrectOpt3.checked },\r\n");
      out.write("                            { contentOption: contentOpt4.value, isCorrect: isCorrectOpt4.checked },\r\n");
      out.write("                          ]\r\n");
      out.write("                    };\r\n");
      out.write("\r\n");
      out.write("                    try {\r\n");
      out.write("                      const questionData = await sendQuestionData(question);\r\n");
      out.write("                      console.log(\"lc\", questionData);\r\n");
      out.write("                      if (questionData.success) {\r\n");
      out.write("                        alert(questionData.message);\r\n");
      out.write("                        const urlListQuestionPage = \"http://localhost:8080/QuesApp/listQuestions\";\r\n");
      out.write("                        window.location.href = urlListQuestionPage;\r\n");
      out.write("                      } else {\r\n");
      out.write("                        throw new Error(questionData.message);\r\n");
      out.write("                      }\r\n");
      out.write("                    } catch (error) {\r\n");
      out.write("                      alert(error.message);\r\n");
      out.write("                    }\r\n");
      out.write("                  } else {\r\n");
      out.write("                    console.error(\"Không thể tìm thấy các phần tử input.\");\r\n");
      out.write("                  }\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("     </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
